// Include the library
#include <SparkFun_RHT03.h>


// Pin Definitions

const int RHT03_DATA_PIN = 4;  // RHT03 data pin

// RHT03 Object Creation

RHT03 rht;  // This creates a RTH03 object, which we'll use to interact with the sensor

const int AirValue = 525;    //you need to replace this value with Value_1
const int WaterValue = 110;  //you need to replace this value with Value_2
int soilMoistureValue = 0;
int soilmoisturepercent = 0;

void setup() {
  Serial.begin(9600);  // Serial is used to print sensor readings.

  // Call rht.begin() to initialize the sensor and our data pin
  rht.begin(RHT03_DATA_PIN);
}

void loop() {
  // Call rht.update() to get new humidity and temperature values from the sensor.

  int updateRet = rht.update();
  soilMoistureValue = analogRead(A0);  //read soil moisture value from analog pin A0
  //map values onto into %
  soilmoisturepercent = map(soilMoistureValue, AirValue, WaterValue, 0, 100);

  // If successful, the update() function will return 1.
  // If update fails, it will return a value <0
  if (updateRet == 1) {
    // The humidity(), tempC(), and tempF() functions can be called -- after
    // a successful update() -- to get the last humidity and temperature value


    // float latestHumidity = rht.humidity();  //optional to read the humidity but was not used in the project
    float latestTempC = rht.tempC();  // calls function from library to get temperature in degrees celcius

    Serial.println("Temp (C): " + String(latestTempC, 1) + " deg C");  //print temp reading

    //print soil moisture levels
    if (soilmoisturepercent >= 100) {
      Serial.println("100 %");
    } else if (soilmoisturepercent <= 0) {
      Serial.println("0 %");
    } else if (soilmoisturepercent > 0 && soilmoisturepercent < 100) {
      Serial.print(soilmoisturepercent);
      Serial.println("%");
    }

    
  } else {
    // If the update failed, try delaying for RHT_READ_INTERVAL_MS ms before
    // trying again.
    delay(RHT_READ_INTERVAL_MS);
    // Serial.println("loading");
  }

  delay(1000);
}
